'''
x bs4
x raw_input
x except as
x xrange
- from builtins import dict, str
- HTMLParser
- urllib -> requests
- urllib parse
- dict.keys(), dict.values(), dict.items()
- print function
- unicode_literals
- basestring
- unicode
- StringIO
- open -> io.open
- super
- htauth replace w/ passlib
- python 3 bytesparser
'''


NOTES:

Python 2
sys.stdin defaults to binary mode


Python 3
sys.stdin defaults to text mode
( https://github.com/kislyuk/eight )

References
http://johnbachman.net/building-a-python-23-compatible-unicode-sandwich.html
http://www.catb.org/esr/faqs/practical-python-porting/

    def make_std_wrapper(stream):
        "Standard input/output wrapper factory function"
        # This ensures that the encoding of standard output and standard
        # error on Python 3 matches the binary encoding we use to turn
        # bytes to Unicode in polystr above

        # newline="\n" ensures that Python 3 won't mangle line breaks
        # line_buffering=True ensures that interactive command sessions work as expected
        return io.TextIOWrapper(stream.buffer, encoding=binary_encoding, newline="\n", line_buffering=True)


DEPENDENCIES
- MySQL-python v1.2.5  last released Jan 2014, does not support Python 3
  see: https://github.com/PyMySQL/mysqlclient-python
  

UNICODE SANDWICH

Inputs
archive-mail, sys.stdin
detail(), open()



Outputs
process() -> open()


Python 3
email.message_from_bytes
